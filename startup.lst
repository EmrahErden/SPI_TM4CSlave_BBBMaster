


ARM Macro Assembler    Page 1 


    1 00000000         ; <<< Use Configuration Wizard in Context Menu >>>
    2 00000000         ;*******************************************************
                       ***********************
    3 00000000         ;
    4 00000000         ; Startup.s - Startup code for Stellaris.
    5 00000000         ;
    6 00000000         ; Copyright (c) 2006-2008 Luminary Micro, Inc.  All righ
                       ts reserved.
    7 00000000         ;
    8 00000000         ; Software License Agreement
    9 00000000         ;
   10 00000000         ; Luminary Micro, Inc. (LMI) is supplying this software 
                       for use solely and
   11 00000000         ; exclusively on LMI's microcontroller products.
   12 00000000         ;
   13 00000000         ; The software is owned by LMI and/or its suppliers, and
                        is protected under
   14 00000000         ; applicable copyright laws.  All rights are reserved.  
                       You may not combine
   15 00000000         ; this software with "viral" open-source software in ord
                       er to form a larger
   16 00000000         ; program.  Any use in violation of the foregoing restri
                       ctions may subject
   17 00000000         ; the user to criminal sanctions under applicable laws, 
                       as well as to civil
   18 00000000         ; liability for the breach of the terms and conditions o
                       f this license.
   19 00000000         ;
   20 00000000         ; THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHE
                       THER EXPRESS, IMPLIED
   21 00000000         ; OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED W
                       ARRANTIES OF
   22 00000000         ; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE A
                       PPLY TO THIS SOFTWARE.
   23 00000000         ; LMI SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPE
                       CIAL, INCIDENTAL, OR
   24 00000000         ; CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   25 00000000         ;
   26 00000000         ; This is part of revision 2523 of the Stellaris Periphe
                       ral Driver Library.
   27 00000000         ;
   28 00000000         ;*******************************************************
                       ***********************
   29 00000000         
   30 00000000         ;*******************************************************
                       ***********************
   31 00000000         ;
   32 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   33 00000000         ;
   34 00000000         ;*******************************************************
                       ***********************
   35 00000000 00000400 
                       Stack   EQU              0x00000400
   36 00000000         
   37 00000000         ;*******************************************************
                       ***********************
   38 00000000         ;
   39 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000000         ;



ARM Macro Assembler    Page 2 


   41 00000000         ;*******************************************************
                       ***********************
   42 00000000 00000000 
                       Heap    EQU              0x00000000
   43 00000000         
   44 00000000         ;*******************************************************
                       ***********************
   45 00000000         ;
   46 00000000         ; Allocate space for the stack.
   47 00000000         ;
   48 00000000         ;*******************************************************
                       ***********************
   49 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   50 00000000         StackMem
   51 00000000                 SPACE            Stack
   52 00000400         __initial_sp
   53 00000400         
   54 00000400         ;*******************************************************
                       ***********************
   55 00000400         ;
   56 00000400         ; Allocate space for the heap.
   57 00000400         ;
   58 00000400         ;*******************************************************
                       ***********************
   59 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   60 00000000         __heap_base
   61 00000000         HeapMem
   62 00000000                 SPACE            Heap
   63 00000000         __heap_limit
   64 00000000         
   65 00000000         ;*******************************************************
                       ***********************
   66 00000000         ;
   67 00000000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   68 00000000         ;
   69 00000000         ;*******************************************************
                       ***********************
   70 00000000                 PRESERVE8
   71 00000000         
   72 00000000         ;*******************************************************
                       ***********************
   73 00000000         ;
   74 00000000         ; Place code into the reset code section.
   75 00000000         ;
   76 00000000         ;*******************************************************
                       ***********************
   77 00000000                 AREA             RESET, CODE, READONLY
   78 00000000                 THUMB
   79 00000000         
   80 00000000         ;*******************************************************
                       ***********************
   81 00000000         ;
   82 00000000         ; External declarations for the interrupt handlers used 
                       by the application.
   83 00000000         ;
   84 00000000         ;*******************************************************



ARM Macro Assembler    Page 3 


                       ***********************
   85 00000000         
   86 00000000         ;*******************************************************
                       ***********************
   87 00000000         ;
   88 00000000         ; The vector table.
   89 00000000         ;
   90 00000000         ;*******************************************************
                       ***********************
   91 00000000                 EXPORT           __Vectors
   92 00000000         __Vectors
   93 00000000 00000400        DCD              StackMem + Stack ; Top of Stack
                                                            
   94 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   95 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   96 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   97 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   98 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   99 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
  100 0000001C 00000000        DCD              0           ; Reserved
  101 00000020 00000000        DCD              0           ; Reserved
  102 00000024 00000000        DCD              0           ; Reserved
  103 00000028 00000000        DCD              0           ; Reserved
  104 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
  105 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
  106 00000034 00000000        DCD              0           ; Reserved
  107 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
  108 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
  109 00000040 00000000        DCD              GPIOPortA_Handler ; GPIO Port A
                                                            
  110 00000044 00000000        DCD              GPIOPortB_Handler ; GPIO Port B
                                                            
  111 00000048 00000000        DCD              GPIOPortC_Handler ; GPIO Port C
                                                            
  112 0000004C 00000000        DCD              GPIOPortD_Handler ; GPIO Port D
                                                            
  113 00000050 00000000        DCD              GPIOPortE_Handler ; GPIO Port E
                                                            
  114 00000054 00000000        DCD              UART0_Handler ; UART0
  115 00000058 00000000        DCD              UART1_Handler ; UART1
  116 0000005C 00000000        DCD              SSI0_Handler ; SSI
  117 00000060 00000000        DCD              I2C0_Handler ; I2C
  118 00000064 00000000        DCD              PWMFault_Handler ; PWM Fault
  119 00000068 00000000        DCD              PWM0_Handler ; PWM Generator 0
  120 0000006C 00000000        DCD              PWM1_Handler ; PWM Generator 1
  121 00000070 00000000        DCD              PWM2_Handler ; PWM Generator 2
  122 00000074 00000000        DCD              Quadrature0_Handler ; Quadratur
                                                            e Encoder
  123 00000078 00000000        DCD              ADC0_Handler ; ADC Sequence 0
  124 0000007C 00000000        DCD              ADC1_Handler ; ADC Sequence 1



ARM Macro Assembler    Page 4 


  125 00000080 00000000        DCD              ADC2_Handler ; ADC Sequence 2
  126 00000084 00000000        DCD              ADC3_Handler ; ADC Sequence 3
  127 00000088 00000000        DCD              WDT_Handler ; Watchdog
  128 0000008C 00000000        DCD              Timer0A_Handler ; Timer 0A
  129 00000090 00000000        DCD              Timer0B_Handler ; Timer 0B
  130 00000094 00000000        DCD              Timer1A_Handler ; Timer 1A
  131 00000098 00000000        DCD              Timer1B_Handler ; Timer 1B
  132 0000009C 00000000        DCD              Timer2A_Handler ; Timer 2A
  133 000000A0 00000000        DCD              Timer2B_Handler ; Timer 2B
  134 000000A4 00000000        DCD              Comp0_Handler ; Comp 0
  135 000000A8 00000000        DCD              Comp1_Handler ; Comp 1
  136 000000AC 00000000        DCD              Comp2_Handler ; Comp 2
  137 000000B0 00000000        DCD              SysCtl_Handler ; System Control
                                                            
  138 000000B4 00000000        DCD              FlashCtl_Handler 
                                                            ; Flash Control
  139 000000B8 00000000        DCD              GPIOPortF_Handler ; GPIO Port F
                                                            
  140 000000BC 00000000        DCD              GPIOPortG_Handler ; GPIO Port G
                                                            
  141 000000C0 00000000        DCD              GPIOPortH_Handler ; GPIO Port H
                                                            
  142 000000C4 00000000        DCD              UART2_Handler ; UART2 Rx and Tx
                                                            
  143 000000C8 00000000        DCD              SSI1_Handler ; SSI1 Rx and Tx
  144 000000CC 00000000        DCD              Timer3A_Handler ; Timer 3 subti
                                                            mer A
  145 000000D0 00000000        DCD              Timer3B_Handler ; Timer 3 subti
                                                            mer B
  146 000000D4 00000000        DCD              I2C1_Handler ; I2C1 Master and 
                                                            Slave
  147 000000D8 00000000        DCD              Quadrature1_Handler ; Quadratur
                                                            e Encoder 1
  148 000000DC 00000000        DCD              CAN0_Handler ; CAN0
  149 000000E0 00000000        DCD              CAN1_Handler ; CAN1
  150 000000E4 00000000        DCD              CAN2_Handler ; CAN2
  151 000000E8 00000000        DCD              Ethernet_Handler ; Ethernet
  152 000000EC 00000000        DCD              Hibernate_Handler ; Hibernate
  153 000000F0 00000000        DCD              USB0_Handler ; USB0
  154 000000F4 00000000        DCD              PWM3_Handler ; PWM Generator 3
  155 000000F8 00000000        DCD              uDMA_Handler ; uDMA Software Tr
                                                            ansfer
  156 000000FC 00000000        DCD              uDMA_Error  ; uDMA Error
  157 00000100         
  158 00000100         ;*******************************************************
                       ***********************
  159 00000100         ;
  160 00000100         ; This is the code that gets called when the processor f
                       irst starts execution
  161 00000100         ; following a reset event.
  162 00000100         ;
  163 00000100         ;*******************************************************
                       ***********************
  164 00000100                 EXPORT           Reset_Handler
  165 00000100         Reset_Handler
  166 00000100         ;
  167 00000100         ; Call the C library enty point that handles startup.  T
                       his will copy
  168 00000100         ; the .data section initializers from flash to SRAM and 



ARM Macro Assembler    Page 5 


                       zero fill the
  169 00000100         ; .bss section.
  170 00000100         ;
  171 00000100                 IMPORT           __main
  172 00000100 F7FF BFFE       B                __main
  173 00000104         
  174 00000104         ;*******************************************************
                       ***********************
  175 00000104         ;
  176 00000104         ; This is the code that gets called when the processor r
                       eceives a NMI.  This
  177 00000104         ; simply enters an infinite loop, preserving the system 
                       state for examination
  178 00000104         ; by a debugger.
  179 00000104         ;
  180 00000104         ;*******************************************************
                       ***********************
  181 00000104         NMI_Handler
                               PROC
  182 00000104                 EXPORT           NMI_Handler               [WEAK
]
  183 00000104 E7FE            B                .
  184 00000106                 ENDP
  185 00000106         
  186 00000106         ;*******************************************************
                       ***********************
  187 00000106         ;
  188 00000106         ; This is the code that gets called when the processor r
                       eceives a fault
  189 00000106         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  190 00000106         ; for examination by a debugger.
  191 00000106         ;
  192 00000106         ;*******************************************************
                       ***********************
  194 00000106         HardFault_Handler
                               PROC
  195 00000106                 EXPORT           HardFault_Handler         [WEAK
]
  196 00000106 E7FE            B                .
  197 00000108                 ENDP
  198 00000108         
  199 00000108         ;*******************************************************
                       ***********************
  200 00000108         ;
  201 00000108         ; This is the code that gets called when the processor r
                       eceives an unexpected
  202 00000108         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  203 00000108         ; for examination by a debugger.
  204 00000108         ;
  205 00000108         ;*******************************************************
                       ***********************
  207 00000108         MemManage_Handler
                               PROC
  208 00000108                 EXPORT           MemManage_Handler         [WEAK
]
  209 00000108 E7FE            B                .
  210 0000010A                 ENDP



ARM Macro Assembler    Page 6 


  212 0000010A         BusFault_Handler
                               PROC
  213 0000010A                 EXPORT           BusFault_Handler          [WEAK
]
  214 0000010A E7FE            B                .
  215 0000010C                 ENDP
  217 0000010C         UsageFault_Handler
                               PROC
  218 0000010C                 EXPORT           UsageFault_Handler        [WEAK
]
  219 0000010C E7FE            B                .
  220 0000010E                 ENDP
  221 0000010E         SVC_Handler
                               PROC
  222 0000010E                 EXPORT           SVC_Handler               [WEAK
]
  223 0000010E E7FE            B                .
  224 00000110                 ENDP
  226 00000110         DebugMon_Handler
                               PROC
  227 00000110                 EXPORT           DebugMon_Handler          [WEAK
]
  228 00000110 E7FE            B                .
  229 00000112                 ENDP
  230 00000112         PendSV_Handler
                               PROC
  231 00000112                 EXPORT           PendSV_Handler            [WEAK
]
  232 00000112 E7FE            B                .
  233 00000114                 ENDP
  234 00000114         SysTick_Handler
                               PROC
  235 00000114                 EXPORT           SysTick_Handler           [WEAK
]
  236 00000114 E7FE            B                .
  237 00000116                 ENDP
  239 00000116         IntDefaultHandler
                               PROC
  240 00000116         
  241 00000116                 EXPORT           GPIOPortA_Handler         [WEAK
]
  242 00000116                 EXPORT           GPIOPortB_Handler         [WEAK
]
  243 00000116                 EXPORT           GPIOPortC_Handler         [WEAK
]
  244 00000116                 EXPORT           GPIOPortD_Handler         [WEAK
]
  245 00000116                 EXPORT           GPIOPortE_Handler         [WEAK
]
  246 00000116                 EXPORT           UART0_Handler             [WEAK
]
  247 00000116                 EXPORT           UART1_Handler             [WEAK
]
  248 00000116                 EXPORT           SSI0_Handler              [WEAK
]
  249 00000116                 EXPORT           I2C0_Handler              [WEAK
]
  250 00000116                 EXPORT           PWMFault_Handler          [WEAK
]



ARM Macro Assembler    Page 7 


  251 00000116                 EXPORT           PWM0_Handler              [WEAK
]
  252 00000116                 EXPORT           PWM1_Handler              [WEAK
]
  253 00000116                 EXPORT           PWM2_Handler              [WEAK
]
  254 00000116                 EXPORT           Quadrature0_Handler       [WEAK
]
  255 00000116                 EXPORT           ADC0_Handler              [WEAK
]
  256 00000116                 EXPORT           ADC1_Handler              [WEAK
]
  257 00000116                 EXPORT           ADC2_Handler              [WEAK
]
  258 00000116                 EXPORT           ADC3_Handler              [WEAK
]
  259 00000116                 EXPORT           WDT_Handler               [WEAK
]
  260 00000116                 EXPORT           Timer0A_Handler           [WEAK
]
  261 00000116                 EXPORT           Timer0B_Handler           [WEAK
]
  262 00000116                 EXPORT           Timer1A_Handler           [WEAK
]
  263 00000116                 EXPORT           Timer1B_Handler           [WEAK
]
  264 00000116                 EXPORT           Timer2A_Handler           [WEAK
]
  265 00000116                 EXPORT           Timer2B_Handler           [WEAK
]
  266 00000116                 EXPORT           Comp0_Handler             [WEAK
]
  267 00000116                 EXPORT           Comp1_Handler             [WEAK
]
  268 00000116                 EXPORT           Comp2_Handler             [WEAK
]
  269 00000116                 EXPORT           SysCtl_Handler            [WEAK
]
  270 00000116                 EXPORT           FlashCtl_Handler          [WEAK
]
  271 00000116                 EXPORT           GPIOPortF_Handler         [WEAK
]
  272 00000116                 EXPORT           GPIOPortG_Handler         [WEAK
]
  273 00000116                 EXPORT           GPIOPortH_Handler         [WEAK
]
  274 00000116                 EXPORT           UART2_Handler             [WEAK
]
  275 00000116                 EXPORT           SSI1_Handler              [WEAK
]
  276 00000116                 EXPORT           Timer3A_Handler           [WEAK
]
  277 00000116                 EXPORT           Timer3B_Handler           [WEAK
]
  278 00000116                 EXPORT           I2C1_Handler              [WEAK
]
  279 00000116                 EXPORT           Quadrature1_Handler       [WEAK
]
  280 00000116                 EXPORT           CAN0_Handler              [WEAK



ARM Macro Assembler    Page 8 


]
  281 00000116                 EXPORT           CAN1_Handler              [WEAK
]
  282 00000116                 EXPORT           CAN2_Handler              [WEAK
]
  283 00000116                 EXPORT           Ethernet_Handler          [WEAK
]
  284 00000116                 EXPORT           Hibernate_Handler         [WEAK
]
  285 00000116                 EXPORT           USB0_Handler              [WEAK
]
  286 00000116                 EXPORT           PWM3_Handler              [WEAK
]
  287 00000116                 EXPORT           uDMA_Handler              [WEAK
]
  288 00000116                 EXPORT           uDMA_Error                [WEAK
]
  289 00000116         
  290 00000116         GPIOPortA_Handler
  291 00000116         GPIOPortB_Handler
  292 00000116         GPIOPortC_Handler
  293 00000116         GPIOPortD_Handler
  294 00000116         GPIOPortE_Handler
  295 00000116         UART0_Handler
  296 00000116         UART1_Handler
  297 00000116         SSI0_Handler
  298 00000116         I2C0_Handler
  299 00000116         PWMFault_Handler
  300 00000116         PWM0_Handler
  301 00000116         PWM1_Handler
  302 00000116         PWM2_Handler
  303 00000116         Quadrature0_Handler
  304 00000116         ADC0_Handler
  305 00000116         ADC1_Handler
  306 00000116         ADC2_Handler
  307 00000116         ADC3_Handler
  308 00000116         WDT_Handler
  309 00000116         Timer0A_Handler
  310 00000116         Timer0B_Handler
  311 00000116         Timer1A_Handler
  312 00000116         Timer1B_Handler
  313 00000116         Timer2A_Handler
  314 00000116         Timer2B_Handler
  315 00000116         Comp0_Handler
  316 00000116         Comp1_Handler
  317 00000116         Comp2_Handler
  318 00000116         SysCtl_Handler
  319 00000116         FlashCtl_Handler
  320 00000116         GPIOPortF_Handler
  321 00000116         GPIOPortG_Handler
  322 00000116         GPIOPortH_Handler
  323 00000116         UART2_Handler
  324 00000116         SSI1_Handler
  325 00000116         Timer3A_Handler
  326 00000116         Timer3B_Handler
  327 00000116         I2C1_Handler
  328 00000116         Quadrature1_Handler
  329 00000116         CAN0_Handler
  330 00000116         CAN1_Handler



ARM Macro Assembler    Page 9 


  331 00000116         CAN2_Handler
  332 00000116         Ethernet_Handler
  333 00000116         Hibernate_Handler
  334 00000116         USB0_Handler
  335 00000116         PWM3_Handler
  336 00000116         uDMA_Handler
  337 00000116         uDMA_Error
  338 00000116 E7FE            B                .
  339 00000118         
  340 00000118                 ENDP
  341 00000118         
  342 00000118         ;*******************************************************
                       ***********************
  343 00000118         ;
  344 00000118         ; Make sure the end of this section is aligned.
  345 00000118         ;
  346 00000118         ;*******************************************************
                       ***********************
  347 00000118                 ALIGN
  348 00000118         
  349 00000118         ;*******************************************************
                       ***********************
  350 00000118         ;
  351 00000118         ; Some code in the normal code section for initializing 
                       the heap and stack.
  352 00000118         ;
  353 00000118         ;*******************************************************
                       ***********************
  354 00000118                 AREA             |.text|, CODE, READONLY
  355 00000000         
  356 00000000         
  357 00000000         ;*******************************************************
                       ***********************
  358 00000000         ;
  359 00000000         ; Useful functions.
  360 00000000         ;
  361 00000000         ;*******************************************************
                       ***********************
  362 00000000                 EXPORT           DisableInterrupts
  363 00000000                 EXPORT           EnableInterrupts
  364 00000000                 EXPORT           StartCritical
  365 00000000                 EXPORT           EndCritical
  366 00000000                 EXPORT           WaitForInterrupt
  367 00000000         
  368 00000000         ;*********** DisableInterrupts ***************
  369 00000000         ; disable interrupts
  370 00000000         ; inputs:  none
  371 00000000         ; outputs: none
  372 00000000         DisableInterrupts
  373 00000000 B672            CPSID            I
  374 00000002 4770            BX               LR
  375 00000004         
  376 00000004         ;*********** EnableInterrupts ***************
  377 00000004         ; disable interrupts
  378 00000004         ; inputs:  none
  379 00000004         ; outputs: none
  380 00000004         EnableInterrupts
  381 00000004 B662            CPSIE            I
  382 00000006 4770            BX               LR



ARM Macro Assembler    Page 10 


  383 00000008         
  384 00000008         ;*********** StartCritical ************************
  385 00000008         ; make a copy of previous I bit, disable interrupts
  386 00000008         ; inputs:  none
  387 00000008         ; outputs: previous I bit
  388 00000008         StartCritical
  389 00000008 F3EF 8010       MRS              R0, PRIMASK ; save old status
  390 0000000C B672            CPSID            I           ; mask all (except 
                                                            faults)
  391 0000000E 4770            BX               LR
  392 00000010         
  393 00000010         ;*********** EndCritical ************************
  394 00000010         ; using the copy of previous I bit, restore I bit to pre
                       vious value
  395 00000010         ; inputs:  previous I bit
  396 00000010         ; outputs: none
  397 00000010         EndCritical
  398 00000010 F380 8810       MSR              PRIMASK, R0
  399 00000014 4770            BX               LR
  400 00000016         
  401 00000016         ;*********** WaitForInterrupt ************************
  402 00000016         ; go to low power mode while waiting for the next interr
                       upt
  403 00000016         ; inputs:  none
  404 00000016         ; outputs: none
  405 00000016         WaitForInterrupt
  406 00000016 BF30            WFI
  407 00000018 4770            BX               LR
  408 0000001A         
  409 0000001A         
  410 0000001A         ;*******************************************************
                       ***********************
  411 0000001A         ;
  412 0000001A         ; The function expected of the C library startup code fo
                       r defining the stack
  413 0000001A         ; and heap memory locations.  For the C library version 
                       of the startup code,
  414 0000001A         ; provide this function so that the C library initializa
                       tion code can find out
  415 0000001A         ; the location of the stack and heap.
  416 0000001A         ;
  417 0000001A         ;*******************************************************
                       ***********************
  418 0000001A                 IF               :DEF: __MICROLIB
  419 0000001A                 EXPORT           __initial_sp
  420 0000001A                 EXPORT           __heap_base
  421 0000001A                 EXPORT           __heap_limit
  422 0000001A                 ELSE
  431                          ENDIF
  432 0000001A         
  433 0000001A         ;*******************************************************
                       ***********************
  434 0000001A         ;
  435 0000001A         ; Make sure the end of this section is aligned.
  436 0000001A         ;
  437 0000001A         ;*******************************************************
                       ***********************
  438 0000001A 00 00           ALIGN
  439 0000001C         



ARM Macro Assembler    Page 11 


  440 0000001C         ;*******************************************************
                       ***********************
  441 0000001C         ;
  442 0000001C         ; Tell the assembler that we're done.
  443 0000001C         ;
  444 0000001C         ;*******************************************************
                       ***********************
  445 0000001C                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\startu
p.d -o.\startup.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\
ARM\Inc\Luminary --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --
list=.\startup.lst Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 49 in file Startup.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 50 in file Startup.s
   Uses
      At line 93 in file Startup.s
Comment: StackMem used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 52 in file Startup.s
   Uses
      At line 419 in file Startup.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 59 in file Startup.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 61 in file Startup.s
   Uses
      None
Comment: HeapMem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 60 in file Startup.s
   Uses
      At line 420 in file Startup.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 63 in file Startup.s
   Uses
      At line 421 in file Startup.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC0_Handler 00000116

Symbol: ADC0_Handler
   Definitions
      At line 304 in file Startup.s
   Uses
      At line 123 in file Startup.s
      At line 255 in file Startup.s

ADC1_Handler 00000116

Symbol: ADC1_Handler
   Definitions
      At line 305 in file Startup.s
   Uses
      At line 124 in file Startup.s
      At line 256 in file Startup.s

ADC2_Handler 00000116

Symbol: ADC2_Handler
   Definitions
      At line 306 in file Startup.s
   Uses
      At line 125 in file Startup.s
      At line 257 in file Startup.s

ADC3_Handler 00000116

Symbol: ADC3_Handler
   Definitions
      At line 307 in file Startup.s
   Uses
      At line 126 in file Startup.s
      At line 258 in file Startup.s

BusFault_Handler 0000010A

Symbol: BusFault_Handler
   Definitions
      At line 212 in file Startup.s
   Uses
      At line 98 in file Startup.s
      At line 213 in file Startup.s

CAN0_Handler 00000116

Symbol: CAN0_Handler
   Definitions
      At line 329 in file Startup.s
   Uses
      At line 148 in file Startup.s
      At line 280 in file Startup.s

CAN1_Handler 00000116

Symbol: CAN1_Handler
   Definitions
      At line 330 in file Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 149 in file Startup.s
      At line 281 in file Startup.s

CAN2_Handler 00000116

Symbol: CAN2_Handler
   Definitions
      At line 331 in file Startup.s
   Uses
      At line 150 in file Startup.s
      At line 282 in file Startup.s

Comp0_Handler 00000116

Symbol: Comp0_Handler
   Definitions
      At line 315 in file Startup.s
   Uses
      At line 134 in file Startup.s
      At line 266 in file Startup.s

Comp1_Handler 00000116

Symbol: Comp1_Handler
   Definitions
      At line 316 in file Startup.s
   Uses
      At line 135 in file Startup.s
      At line 267 in file Startup.s

Comp2_Handler 00000116

Symbol: Comp2_Handler
   Definitions
      At line 317 in file Startup.s
   Uses
      At line 136 in file Startup.s
      At line 268 in file Startup.s

DebugMon_Handler 00000110

Symbol: DebugMon_Handler
   Definitions
      At line 226 in file Startup.s
   Uses
      At line 105 in file Startup.s
      At line 227 in file Startup.s

Ethernet_Handler 00000116

Symbol: Ethernet_Handler
   Definitions
      At line 332 in file Startup.s
   Uses
      At line 151 in file Startup.s
      At line 283 in file Startup.s

FlashCtl_Handler 00000116



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: FlashCtl_Handler
   Definitions
      At line 319 in file Startup.s
   Uses
      At line 138 in file Startup.s
      At line 270 in file Startup.s

GPIOPortA_Handler 00000116

Symbol: GPIOPortA_Handler
   Definitions
      At line 290 in file Startup.s
   Uses
      At line 109 in file Startup.s
      At line 241 in file Startup.s

GPIOPortB_Handler 00000116

Symbol: GPIOPortB_Handler
   Definitions
      At line 291 in file Startup.s
   Uses
      At line 110 in file Startup.s
      At line 242 in file Startup.s

GPIOPortC_Handler 00000116

Symbol: GPIOPortC_Handler
   Definitions
      At line 292 in file Startup.s
   Uses
      At line 111 in file Startup.s
      At line 243 in file Startup.s

GPIOPortD_Handler 00000116

Symbol: GPIOPortD_Handler
   Definitions
      At line 293 in file Startup.s
   Uses
      At line 112 in file Startup.s
      At line 244 in file Startup.s

GPIOPortE_Handler 00000116

Symbol: GPIOPortE_Handler
   Definitions
      At line 294 in file Startup.s
   Uses
      At line 113 in file Startup.s
      At line 245 in file Startup.s

GPIOPortF_Handler 00000116

Symbol: GPIOPortF_Handler
   Definitions
      At line 320 in file Startup.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 139 in file Startup.s
      At line 271 in file Startup.s

GPIOPortG_Handler 00000116

Symbol: GPIOPortG_Handler
   Definitions
      At line 321 in file Startup.s
   Uses
      At line 140 in file Startup.s
      At line 272 in file Startup.s

GPIOPortH_Handler 00000116

Symbol: GPIOPortH_Handler
   Definitions
      At line 322 in file Startup.s
   Uses
      At line 141 in file Startup.s
      At line 273 in file Startup.s

HardFault_Handler 00000106

Symbol: HardFault_Handler
   Definitions
      At line 194 in file Startup.s
   Uses
      At line 96 in file Startup.s
      At line 195 in file Startup.s

Hibernate_Handler 00000116

Symbol: Hibernate_Handler
   Definitions
      At line 333 in file Startup.s
   Uses
      At line 152 in file Startup.s
      At line 284 in file Startup.s

I2C0_Handler 00000116

Symbol: I2C0_Handler
   Definitions
      At line 298 in file Startup.s
   Uses
      At line 117 in file Startup.s
      At line 249 in file Startup.s

I2C1_Handler 00000116

Symbol: I2C1_Handler
   Definitions
      At line 327 in file Startup.s
   Uses
      At line 146 in file Startup.s
      At line 278 in file Startup.s

IntDefaultHandler 00000116




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Symbol: IntDefaultHandler
   Definitions
      At line 239 in file Startup.s
   Uses
      None
Comment: IntDefaultHandler unused
MemManage_Handler 00000108

Symbol: MemManage_Handler
   Definitions
      At line 207 in file Startup.s
   Uses
      At line 97 in file Startup.s
      At line 208 in file Startup.s

NMI_Handler 00000104

Symbol: NMI_Handler
   Definitions
      At line 181 in file Startup.s
   Uses
      At line 95 in file Startup.s
      At line 182 in file Startup.s

PWM0_Handler 00000116

Symbol: PWM0_Handler
   Definitions
      At line 300 in file Startup.s
   Uses
      At line 119 in file Startup.s
      At line 251 in file Startup.s

PWM1_Handler 00000116

Symbol: PWM1_Handler
   Definitions
      At line 301 in file Startup.s
   Uses
      At line 120 in file Startup.s
      At line 252 in file Startup.s

PWM2_Handler 00000116

Symbol: PWM2_Handler
   Definitions
      At line 302 in file Startup.s
   Uses
      At line 121 in file Startup.s
      At line 253 in file Startup.s

PWM3_Handler 00000116

Symbol: PWM3_Handler
   Definitions
      At line 335 in file Startup.s
   Uses
      At line 154 in file Startup.s
      At line 286 in file Startup.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols


PWMFault_Handler 00000116

Symbol: PWMFault_Handler
   Definitions
      At line 299 in file Startup.s
   Uses
      At line 118 in file Startup.s
      At line 250 in file Startup.s

PendSV_Handler 00000112

Symbol: PendSV_Handler
   Definitions
      At line 230 in file Startup.s
   Uses
      At line 107 in file Startup.s
      At line 231 in file Startup.s

Quadrature0_Handler 00000116

Symbol: Quadrature0_Handler
   Definitions
      At line 303 in file Startup.s
   Uses
      At line 122 in file Startup.s
      At line 254 in file Startup.s

Quadrature1_Handler 00000116

Symbol: Quadrature1_Handler
   Definitions
      At line 328 in file Startup.s
   Uses
      At line 147 in file Startup.s
      At line 279 in file Startup.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 77 in file Startup.s
   Uses
      None
Comment: RESET unused
Reset_Handler 00000100

Symbol: Reset_Handler
   Definitions
      At line 165 in file Startup.s
   Uses
      At line 94 in file Startup.s
      At line 164 in file Startup.s

SSI0_Handler 00000116

Symbol: SSI0_Handler
   Definitions
      At line 297 in file Startup.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 116 in file Startup.s
      At line 248 in file Startup.s

SSI1_Handler 00000116

Symbol: SSI1_Handler
   Definitions
      At line 324 in file Startup.s
   Uses
      At line 143 in file Startup.s
      At line 275 in file Startup.s

SVC_Handler 0000010E

Symbol: SVC_Handler
   Definitions
      At line 221 in file Startup.s
   Uses
      At line 104 in file Startup.s
      At line 222 in file Startup.s

SysCtl_Handler 00000116

Symbol: SysCtl_Handler
   Definitions
      At line 318 in file Startup.s
   Uses
      At line 137 in file Startup.s
      At line 269 in file Startup.s

SysTick_Handler 00000114

Symbol: SysTick_Handler
   Definitions
      At line 234 in file Startup.s
   Uses
      At line 108 in file Startup.s
      At line 235 in file Startup.s

Timer0A_Handler 00000116

Symbol: Timer0A_Handler
   Definitions
      At line 309 in file Startup.s
   Uses
      At line 128 in file Startup.s
      At line 260 in file Startup.s

Timer0B_Handler 00000116

Symbol: Timer0B_Handler
   Definitions
      At line 310 in file Startup.s
   Uses
      At line 129 in file Startup.s
      At line 261 in file Startup.s

Timer1A_Handler 00000116



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols


Symbol: Timer1A_Handler
   Definitions
      At line 311 in file Startup.s
   Uses
      At line 130 in file Startup.s
      At line 262 in file Startup.s

Timer1B_Handler 00000116

Symbol: Timer1B_Handler
   Definitions
      At line 312 in file Startup.s
   Uses
      At line 131 in file Startup.s
      At line 263 in file Startup.s

Timer2A_Handler 00000116

Symbol: Timer2A_Handler
   Definitions
      At line 313 in file Startup.s
   Uses
      At line 132 in file Startup.s
      At line 264 in file Startup.s

Timer2B_Handler 00000116

Symbol: Timer2B_Handler
   Definitions
      At line 314 in file Startup.s
   Uses
      At line 133 in file Startup.s
      At line 265 in file Startup.s

Timer3A_Handler 00000116

Symbol: Timer3A_Handler
   Definitions
      At line 325 in file Startup.s
   Uses
      At line 144 in file Startup.s
      At line 276 in file Startup.s

Timer3B_Handler 00000116

Symbol: Timer3B_Handler
   Definitions
      At line 326 in file Startup.s
   Uses
      At line 145 in file Startup.s
      At line 277 in file Startup.s

UART0_Handler 00000116

Symbol: UART0_Handler
   Definitions
      At line 295 in file Startup.s
   Uses



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

      At line 114 in file Startup.s
      At line 246 in file Startup.s

UART1_Handler 00000116

Symbol: UART1_Handler
   Definitions
      At line 296 in file Startup.s
   Uses
      At line 115 in file Startup.s
      At line 247 in file Startup.s

UART2_Handler 00000116

Symbol: UART2_Handler
   Definitions
      At line 323 in file Startup.s
   Uses
      At line 142 in file Startup.s
      At line 274 in file Startup.s

USB0_Handler 00000116

Symbol: USB0_Handler
   Definitions
      At line 334 in file Startup.s
   Uses
      At line 153 in file Startup.s
      At line 285 in file Startup.s

UsageFault_Handler 0000010C

Symbol: UsageFault_Handler
   Definitions
      At line 217 in file Startup.s
   Uses
      At line 99 in file Startup.s
      At line 218 in file Startup.s

WDT_Handler 00000116

Symbol: WDT_Handler
   Definitions
      At line 308 in file Startup.s
   Uses
      At line 127 in file Startup.s
      At line 259 in file Startup.s

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 92 in file Startup.s
   Uses
      At line 91 in file Startup.s
Comment: __Vectors used once
uDMA_Error 00000116

Symbol: uDMA_Error



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 337 in file Startup.s
   Uses
      At line 156 in file Startup.s
      At line 288 in file Startup.s

uDMA_Handler 00000116

Symbol: uDMA_Handler
   Definitions
      At line 336 in file Startup.s
   Uses
      At line 155 in file Startup.s
      At line 287 in file Startup.s

61 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 354 in file Startup.s
   Uses
      None
Comment: .text unused
DisableInterrupts 00000000

Symbol: DisableInterrupts
   Definitions
      At line 372 in file Startup.s
   Uses
      At line 362 in file Startup.s
Comment: DisableInterrupts used once
EnableInterrupts 00000004

Symbol: EnableInterrupts
   Definitions
      At line 380 in file Startup.s
   Uses
      At line 363 in file Startup.s
Comment: EnableInterrupts used once
EndCritical 00000010

Symbol: EndCritical
   Definitions
      At line 397 in file Startup.s
   Uses
      At line 365 in file Startup.s
Comment: EndCritical used once
StartCritical 00000008

Symbol: StartCritical
   Definitions
      At line 388 in file Startup.s
   Uses
      At line 364 in file Startup.s
Comment: StartCritical used once
WaitForInterrupt 00000016

Symbol: WaitForInterrupt
   Definitions
      At line 405 in file Startup.s
   Uses
      At line 366 in file Startup.s
Comment: WaitForInterrupt used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap 00000000

Symbol: Heap
   Definitions
      At line 42 in file Startup.s
   Uses
      At line 62 in file Startup.s
Comment: Heap used once
Stack 00000400

Symbol: Stack
   Definitions
      At line 35 in file Startup.s
   Uses
      At line 51 in file Startup.s
      At line 93 in file Startup.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 171 in file Startup.s
   Uses
      At line 172 in file Startup.s
Comment: __main used once
1 symbol
409 symbols in table
